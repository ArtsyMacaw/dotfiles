#!/bin/bash
# Creates, delets, and edits entries in pass
# Requires sway, fzf, pass, wl-clipboard, sed, ripgrep(can be replaced with gnu grep), and bash 

cd /home/haden/.password-store
option=$(echo -e "Add\nDelete\nEdit\nGit" | grep -i 'Add\|Delete\|Edit\|Git' | fzf --color=fg:#F7F7F7,bg:#2b2929,hl:#F7F7F7,fg+:#F7F7F7,bg+:235,hl+:#F7F7F7,bg+:#e95420 --color=info:#2b2929,prompt:#F7F7F7,spinner:#2b2929,pointer:#e95420,marker:#2b2929,gutter:#2b2929 --prompt='Password Manager: ' --bind='tab:toggle-down,btab:toggle-up' --border --reverse)
if [ "$option" = "Add" ]; then
    location=$(find . -not -path '*/\.*' -type d | sed s_./__ | sed 's_\._New Directory_' | fzf --color=fg:#F7F7F7,bg:#2b2929,hl:#F7F7F7,fg+:#F7F7F7,bg+:235,hl+:#F7F7F7,bg+:#e95420 --color=info:#2b2929,prompt:#F7F7F7,spinner:#2b2929,pointer:#e95420,marker:#2b2929,gutter:#2b2929 --prompt='Enter Directory: ' --bind='tab:toggle-down,btab:toggle-up' --border --reverse)
    if [ "$location" = "New Directory" ]; then
        dir_name=$(zenity --name=menu --entry --text="Enter Directory Name")
        mkdir $dir_name
        exit 0
    fi
    entry=$(zenity --name=menu --entry --text="Enter Entry Name")
    pass generate -n "$location"/"$entry"
    notify-send "Password succesfully generated"
    exit 0
elif [ "$option" = "Delete" ]; then
    PASSFILE=$(tree -Ffi | rg '.gpg' | sed 's/.gpg$//g' | sed 's/^..//' | fzf --color=fg:#F7F7F7,bg:#2b2929,hl:#F7F7F7,fg+:#F7F7F7,bg+:235,hl+:#F7F7F7,bg+:#e95420 --color=info:#2b2929,prompt:#F7F7F7,spinner:#2b2929,pointer:#e95420,marker:#2b2929,gutter:#2b2929 --prompt='Entry: ' --bind='tab:toggle-down,btab:toggle-up' --border --reverse)
    pass rm $PASSFILE
    notify-send "Password Deleted"
    exit 0
elif [ "$option" = "Edit" ]; then
    PASSFILE=$(tree -Ffi | rg '.gpg' | sed 's/.gpg$//g' | sed 's/^..//' | fzf --color=fg:#F7F7F7,bg:#2b2929,hl:#F7F7F7,fg+:#F7F7F7,bg+:235,hl+:#F7F7F7,bg+:#e95420 --color=info:#2b2929,prompt:#F7F7F7,spinner:#2b2929,pointer:#e95420,marker:#2b2929,gutter:#2b2929 --prompt='Entry: ' --bind='tab:toggle-down,btab:toggle-up' --border --reverse)
    edit=$(echo -e "Edit Password\nRotate\nAdd Additional Info" | grep -i 'Edit Password\|Rotate\|Add Additional Info' | fzf --color=fg:#F7F7F7,bg:#2b2929,hl:#F7F7F7,fg+:#F7F7F7,bg+:235,hl+:#F7F7F7,bg+:#e95420 --color=info:#2b2929,prompt:#F7F7F7,spinner:#2b2929,pointer:#e95420,marker:#2b2929,gutter:#2b2929 --prompt='Enter Directory: ' --bind='tab:toggle-down,btab:toggle-up' --border --reverse)
    if [ "$edit" = "Edit Password" ]; then 
        current=$(pass show "$PASSFILE" | head -n 1)
        read -re -i "$current" -p 'Edit: ' current
        yes "$current" | pass insert -f "$PASSFILE"
        notify-send "Updated $PASSFILE"
        exit 0
    elif [ "$edit" = "Rotate" ]; then
        notify-send "Not yet supported."
        exit 0
    elif [ "$edit" = "Add Additional Info" ]; then
        pass edit "$PASSFILE"
        notify-send "Updated $PASSFILE"
        exit 0
    fi

elif [ "$option" = "Git" ]; then
    operation=$(echo -e "Update Master\nSync" | grep -i 'Update Master\|Sync' | fzf --color=fg:#F7F7F7,bg:#2b2929,hl:#F7F7F7,fg+:#F7F7F7,bg+:235,hl+:#F7F7F7,bg+:#e95420 --color=info:#2b2929,prompt:#F7F7F7,spinner:#2b2929,pointer:#e95420,marker:#2b2929,gutter:#2b2929 --prompt='Operation: ' --bind='tab:toggle-down,btab:toggle-up' --border --reverse)
    if [ "$operation" = "Update Master" ]; then
        swaymsg move container scratchpad
        pass git push origin master
        notify-send "Remote master updated"
        exit 0
    elif [ "$operation" = "Sync" ]; then
        swaymsg move container scratchpad
        pass git pull origin master
        notify-send "Passwords synced"
        exit 0
    fi
fi
exit 1
