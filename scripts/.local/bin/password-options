#!/bin/bash
# Creates, delets, and edits entries in pass
# Requires sway, fzf, pass, zenity, find, git, yes sed, grep, and bash 

cd /home/haden/.password-store || return

option=$(echo -e "Add\nDelete\nEdit\nGit" | grep -i 'Add\|Delete\|Edit\|Git' | tofi --prompt-text "Password Manager: ")

if [ -z "$option" ]; then

	exit 0

fi

if [ "$option" = "Add" ]; then

    location=$(find . -not -path '*/\.*' -type d | sed s_./__ | sed 's_\._New Directory_' | tofi --prompt-text "Enter Directory: ")

    if [ "$location" = "New Directory" ]; then

        dir_name=$(zenity --entry --text="Enter Directory Name" --title="New Directory")

        mkdir "$dir_name"

        location=$(echo $dir_name)

    fi

    entry=$(zenity --entry --text="Enter Name" --title="Password")

    option=$(echo -e "Generate Password\nInsert Password\nInsert Multiple Lines" | grep -i 'Generate Password\|Insert Password\|Insert Multiple Lines' | tofi --prompt-text "Options: ")

    if [ "$option" = "Generate Password" ]; then

         pass generate -n "$location"/"$entry"

         notify-send "Password succesfully generated"

         exit 0

    elif [ "$option" = "Insert Password" ]; then

        current=$(zenity --entry --text="Enter Password" --title="Password")

        yes "$current" | pass insert -f "$location"/"$entry"

        notify-send "Password succesfully created"

        exit 0

    elif [ "$option" = "Insert Multiple Lines" ]; then

        foot --app-id=menu pass edit "$location"/"$entry"

        notify-send "Password succesfully created"

        exit 0

    fi

    exit 1

elif [ "$option" = "Delete" ]; then

    PASSFILE=$(tree -Ffi | rg '.gpg' | sed 's/.gpg$//g' | sed 's/^..//' | tofi --prompt-text "Entry: ")

    pass rm -f "$PASSFILE"

    notify-send "Password Deleted"

    exit 0

elif [ "$option" = "Edit" ]; then

    PASSFILE=$(tree -Ffi | rg '.gpg' | sed 's/.gpg$//g' | sed 's/^..//' | tofi --prompt-text "Entry: ")

    edit=$(echo -e "Edit Password\nRotate\nAdd Additional Info" | grep -i 'Edit Password\|Rotate\|Add Additional Info' | tofi --prompt-text "Options: ")

    if [ "$edit" = "Edit Password" ]; then

        current=$(pass show "$PASSFILE" | head -n 1)

        foot --app-id=menu read -re -i "$current" -p 'Edit: ' $current

        yes "$current" | pass insert -f "$PASSFILE"

        notify-send "Updated $PASSFILE"

        exit 0

    elif [ "$edit" = "Rotate" ]; then

        notify-send "Not yet supported."

        exit 0

    elif [ "$edit" = "Add Additional Info" ]; then

        foot --app-id=menu pass edit "$PASSFILE"

        notify-send "Updated $PASSFILE"

        exit 0

    fi

elif [ "$option" = "Git" ]; then

    operation=$(echo -e "Update Master\nSync" | grep -i 'Update Master\|Sync' | tofi --prompt-text "Operation: ")

    if [ -z "$operation" ]; then

	    exit 0

    fi

    if [ "$operation" = "Update Master" ]; then

        pass git push origin master

        notify-send "Remote master updated"

        exit 0

    elif [ "$operation" = "Sync" ]; then

        pass git pull origin master

        notify-send "Passwords synced"

        exit 0

    fi
fi

exit 1
